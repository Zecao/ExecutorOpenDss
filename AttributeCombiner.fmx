#! <?xml version="1.0" encoding="utf-8" ?>
#! <TRANSFORMER
# TRANSFORMER_BEGIN AttributeCombiner,1,Strings,f9c980f0-5c0b-413e-a015-e2e0dba20129,"Embedded by Default",No,NO_PARALLELISM,,No,15575,YES,No
# <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">
#     <span style=" font-family:'Verdana';">Combines specified attribute(s) of multiple features to form concatenated string(s). This transformer outputs a single feature for each group of input features, and the specified attribute(s) in the output feature will store the concatenated string(s). </span>
# </p>
# <p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:'Verdana';">
#     <br/>
# </p>
# <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">
#     <span style=" font-family:'Verdana';">This transformer always discards &lt;null&gt; and &lt;missing&gt; attributes. Regarding the empty string, you can control how to handle that with the "Drop Empty String" parameter. </span>
# </p>
# <p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:'Verdana';">
#     <br/>
# </p>
# <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">
#     <span style=" font-family:'Verdana';">The function is similar to the "Attributes to Concatenate" option of the Aggregator, but this transformer does not aggregate features. The geometry and unspecified attributes of any one feature for each group will be preserved, but others will be discarded. </span>
# </p>
# <p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:'Verdana';">
#     <br/>
# </p>
# <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">
#     <span style=" font-family:'Verdana';">This transformer can be used to concatenate specific attributes of many features efficiently, if you don't need to perform feature aggregation.</span>
# </p>
# <p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:'Verdana';">
#     <br/>
# </p>
# <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">
#     <span style=" font-family:'Verdana';">Note: This transformer contains a Python script, which was tested with Python 2.7 interpreter. It may NOT work with Python 3.x interpreter. </span>
# </p>
# <p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:'Verdana';">
#     <br/>
# </p>
# 
# TRANSFORMER_END
#! MAX_LOOP_ITERATIONS=""
#! XFORM_DEPRECATED="No"
#! LEGAL_TERMS_CONDITIONS="&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;Copyright (c) 2016 pragmatica inc. &lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;Permission is granted to anyone, free of charge, to use, modify and distribute the object code form of this transformer for any purpose, subject to the following restrictions: &lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;1) The origin of this transformer and associated FME(R) software must not be misrepresented. &lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;2) This transformer may only be used in conjunction with a validly licensed copy of FME software. &lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;THIS SOFTWARE IS PROVIDED BY PRAGMATICA INC. &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, NONINFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL PRAGMATICA INC. BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. &lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:&apos;Verdana&apos;;&quot;&gt;&#10;    &lt;br/&gt;&#10;&lt;/p&gt;&#10;"
#! ITERATION_COUNT_ATTR=""
#! HISTORY="2016-04-13,Takashi&lt;space&gt;Iijima,Original&lt;space&gt;Implementation,2016-04-16,Takashi&lt;space&gt;Iijima,Updated&lt;space&gt;to&lt;space&gt;differentiate&lt;space&gt;empty&lt;comma&gt;&lt;space&gt;null&lt;comma&gt;&lt;space&gt;and&lt;space&gt;missing&lt;space&gt;as&lt;space&gt;Group&lt;space&gt;By&lt;space&gt;attribute&lt;space&gt;values."
#! PASSWORD=""
#! FME_PROCESS_GROUPS_ORDERED="No"
#! FME_BUILD_NUM="15575"
#! CATEGORY="Strings"
#! REQUIREMENTS_KEYWORD="none"
#! FME_DOCUMENT_PRIORGUID=""
#! REQUIREMENTS="&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;FME 2015.1.3+&lt;/span&gt;&#10;&lt;/p&gt;&#10;"
#! FME_DOCUMENT_GUID="f9c980f0-5c0b-413e-a015-e2e0dba20129"
#! ZOOM_SCALE="100"
#! WORKSPACE_VERSION="1"
#! FMX_INSERT_MODE="Embedded by Default"
#! FME_PROCESS_GROUP_BY=""
#! ATTR_TYPE_ENCODING="SDF"
#! DOC_EXTENTS="2721.76 588.005"
#! WARN_INVALID_XFORM_PARAM="Yes"
#! FME_LINKED_TRANSFORMER_VERSION="1"
#! LAST_SAVE_DATE="2016-04-16T17:20:42"
#! SHOW_ANNOTATIONS="true"
#! FME_PROCESS_COUNT="NO_PARALLELISM"
#! BLOCKED_LOOPING="No"
#! FME_SERVER_SERVICES=""
#! DOC_TOP_LEFT="115 -564.504"
#! VIEW_POSITION="-552.006 543.005"
#! LAST_SAVE_BUILD="FME(R) 2015.1.3.2 (20160108 - Build 15575 - WIN32)"
#! DESCRIPTION="&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;Combines specified attribute(s) of multiple features to form concatenated string(s). This transformer outputs a single feature for each group of input features, and the specified attribute(s) in the output feature will store the concatenated string(s). &lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:&apos;Verdana&apos;;&quot;&gt;&#10;    &lt;br/&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;This transformer always discards &amp;lt;null&amp;gt; and &amp;lt;missing&amp;gt; attributes. Regarding the empty string, you can control how to handle that with the &quot;Drop Empty String&quot; parameter. &lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:&apos;Verdana&apos;;&quot;&gt;&#10;    &lt;br/&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;The function is similar to the &quot;Attributes to Concatenate&quot; option of the Aggregator, but this transformer does not aggregate features. The geometry and unspecified attributes of any one feature for each group will be preserved, but others will be discarded. &lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:&apos;Verdana&apos;;&quot;&gt;&#10;    &lt;br/&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;This transformer can be used to concatenate specific attributes of many features efficiently, if you don&apos;t need to perform feature aggregation.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:&apos;Verdana&apos;;&quot;&gt;&#10;    &lt;br/&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;Note: This transformer contains a Python script, which was tested with Python 2.7 interpreter. It may NOT work with Python 3.x interpreter. &lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:&apos;Verdana&apos;;&quot;&gt;&#10;    &lt;br/&gt;&#10;&lt;/p&gt;&#10;"
#! USAGE="&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; font-weight:600; color:#0000ff;&quot;&gt;Parameters&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:&apos;Verdana&apos;;&quot;&gt;&#10;    &lt;br/&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; color:#005500;&quot;&gt;Group By&lt;/span&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;: &lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;If you specify one or more attributes in this parameter, the concatenation will be performed for each group of features which have the same value(s) for the specified attribute(s).&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:&apos;Verdana&apos;;&quot;&gt;&#10;    &lt;br/&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; color:#005500;&quot;&gt;Input is Ordered by Group&lt;/span&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;:&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;If you are sure that the input features are sorted by the &quot;Group By&quot; attributes, you can set &quot;Yes&quot; to this parameter so that the processing will be performed with the best performance.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:&apos;Verdana&apos;;&quot;&gt;&#10;    &lt;br/&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; color:#005500;&quot;&gt;Attributes to Combine&lt;/span&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;:&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;Select attributes that should be combined.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:&apos;Verdana&apos;;&quot;&gt;&#10;    &lt;br/&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; color:#005500;&quot;&gt;Maximum Number of Features to Combine&lt;/span&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;:&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;Optionally you can specify the maximum number of features to combine into one. The number must be an integer greater than 0. Otherwise, the setting will be ignored. &lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:&apos;Verdana&apos;;&quot;&gt;&#10;    &lt;br/&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;Note that the number specified with this parameter indicates the maximum number of processed features at once. The number of concatenated attributes could be less than the maximum, since &amp;lt;null&amp;gt; and &amp;lt;missing&amp;gt; (and &amp;lt;empty&amp;gt; if you set &quot;Yes&quot; to the &quot;Drop Empty String&quot; parameter) attributes will be discarded. &lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:&apos;Verdana&apos;;&quot;&gt;&#10;    &lt;br/&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; color:#005500;&quot;&gt;Drop Empty String&lt;/span&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;:&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;By default, this transformer treats the empty string as a valid value which should be concatenated. If you don&apos;t want to concatenate empty strings, set &quot;Yes&quot; to this parameter.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:&apos;Verdana&apos;;&quot;&gt;&#10;    &lt;br/&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; color:#005500;&quot;&gt;Delimiter String&lt;/span&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;:&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;Specify a character string that should be used as a delimiter string to separate individual values. You can also leave blank this parameter not to use any delimiter.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;br/&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; color:#005500;&quot;&gt;Surround Each Value With&lt;/span&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;:&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;Optionally you can select a pair of symbols (e.g. single quotation marks) that will surround each value before concatenating. &lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:&apos;Verdana&apos;;&quot;&gt;&#10;    &lt;br/&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; color:#005500;&quot;&gt;Prefix for Each Value&lt;/span&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;: &lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;Optionally you can specify a prefix string that will be added to each value. &lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:&apos;Verdana&apos;;&quot;&gt;&#10;    &lt;br/&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; color:#005500;&quot;&gt;Suffix for Each Value&lt;/span&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;: &lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;Optionally you can specify a suffix string that will be added to each value. &lt;/span&gt;&#10;&lt;/p&gt;&#10;"
#! SHOW_INFO_NODES="true"
#! TITLE="AttributeCombiner"
#! >
#! <DATASETS>
#! </DATASETS>
#! <DATA_TYPES>
#! </DATA_TYPES>
#! <GEOM_TYPES>
#! </GEOM_TYPES>
#! <FEATURE_TYPES>
#! </FEATURE_TYPES>
#! <FMESERVER>
#! </FMESERVER>
#! <GLOBAL_PARAMETERS>
#! <GLOBAL_PARAMETER
#! GUI_LINE="GUI OPTIONAL ATTRLIST GROUP_BY &quot; &quot; Group By:"
#! DEFAULT_VALUE=""
#! IS_STAND_ALONE="false"
#! />
#! <GLOBAL_PARAMETER
#! GUI_LINE="GUI CHOICE_OR_ATTR ORDERED_BY_GROUP Yes%No Input is Ordered by Group:"
#! DEFAULT_VALUE="No"
#! IS_STAND_ALONE="true"
#! />
#! <GLOBAL_PARAMETER
#! GUI_LINE="GUI ATTRLIST_OR_ATTR ATTRS &quot; &quot; Attributes to Combine:"
#! DEFAULT_VALUE=""
#! IS_STAND_ALONE="true"
#! />
#! <GLOBAL_PARAMETER
#! GUI_LINE="GUI OPTIONAL INTEGER_OR_ATTR MAX_NUM Maximum Number of Features to Combine:"
#! DEFAULT_VALUE=""
#! IS_STAND_ALONE="true"
#! />
#! <GLOBAL_PARAMETER
#! GUI_LINE="GUI CHOICE_OR_ATTR DROP_EMPTY Yes%No Drop Empty String:"
#! DEFAULT_VALUE="No"
#! IS_STAND_ALONE="true"
#! />
#! <GLOBAL_PARAMETER
#! GUI_LINE="GUI OPTIONAL TEXT_EDIT_OR_ATTR DELIM Delimiter String:"
#! DEFAULT_VALUE="&lt;comma&gt;"
#! IS_STAND_ALONE="true"
#! />
#! <GLOBAL_PARAMETER
#! GUI_LINE="GUI LOOKUP_CHOICE_OR_ATTR QUOT Single&lt;space&gt;Quotation&lt;space&gt;Marks:&lt;space&gt;&lt;apos&gt;value&lt;apos&gt;,Single%Double&lt;space&gt;Quotation&lt;space&gt;Marks:&lt;space&gt;&lt;quote&gt;value&lt;quote&gt;,Double%Round&lt;space&gt;Brackets:&lt;space&gt;&lt;openparen&gt;value&lt;closeparen&gt;,Round%Curly&lt;space&gt;Brackets:&lt;space&gt;&lt;opencurly&gt;value&lt;closecurly&gt;,Curly%Square&lt;space&gt;Brackets:&lt;space&gt;&lt;openbracket&gt;value&lt;closebracket&gt;,Square%Inequality&lt;space&gt;Signs:&lt;space&gt;&lt;lt&gt;value&lt;gt&gt;,Inequality%None,None Surround Each Value With:"
#! DEFAULT_VALUE="None"
#! IS_STAND_ALONE="true"
#! />
#! <GLOBAL_PARAMETER
#! GUI_LINE="GUI OPTIONAL TEXT_EDIT_OR_ATTR PREFIX Prefix for Each Value:"
#! DEFAULT_VALUE=""
#! IS_STAND_ALONE="true"
#! />
#! <GLOBAL_PARAMETER
#! GUI_LINE="GUI OPTIONAL TEXT_EDIT_OR_ATTR SUFFIX Suffix for Each Value:"
#! DEFAULT_VALUE=""
#! IS_STAND_ALONE="true"
#! />
#! </GLOBAL_PARAMETERS>
#! <COMMENTS>
#! </COMMENTS>
#! <CONSTANTS>
#! </CONSTANTS>
#! <BOOKMARKS>
#! </BOOKMARKS>
#! <TRANSFORMERS>
#! <TRANSFORMER
#! IDENTIFIER="3"
#! TYPE="ParameterFetcher"
#! VERSION="4"
#! POSITION="693 23.5011"
#! BOUNDING_RECT="693 23.5011 -1 -1"
#! ORDER="5e+014"
#! PARMS_EDITED="true"
#! ENABLED="true"
#! LAST_PARM_EDIT="15575"
#! >
#! <OUTPUT_FEAT NAME="OUTPUT"/>
#! <FEAT_COLLAPSED COLLAPSED="0"/>
#! <XFORM_ATTR ATTR_NAME="__tmp.group_by" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.attrs" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.max_num" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.delim" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.drop_empty" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.quot" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.prefix" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.suffix" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_PARM PARM_NAME="ATTR_LIST" PARM_VALUE="__tmp.group_by {$(GROUP_BY)} __tmp.attrs {$(ATTRS)} __tmp.max_num {$(MAX_NUM)} __tmp.delim {$(DELIM)} __tmp.drop_empty {$(DROP_EMPTY)} __tmp.quot {$(QUOT)} __tmp.prefix {$(PREFIX)} __tmp.suffix {$(SUFFIX)}"/>
#! <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="ParameterFetcher"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#! IDENTIFIER="6"
#! TYPE="TclCaller"
#! VERSION="4"
#! POSITION="693 -162.501"
#! BOUNDING_RECT="693 -162.501 430 71"
#! ORDER="5e+014"
#! PARMS_EDITED="true"
#! ENABLED="true"
#! LAST_PARM_EDIT="15575"
#! >
#! <OUTPUT_FEAT NAME="OUTPUT"/>
#! <FEAT_COLLAPSED COLLAPSED="0"/>
#! <XFORM_ATTR ATTR_NAME="__tmp.group_by" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.attrs" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.max_num" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.delim" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.drop_empty" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.quot" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.prefix" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.suffix" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.attr{}" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.group" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_PARM PARM_NAME="TCLPROG" PARM_VALUE="preProcessToCombine"/>
#! <XFORM_PARM PARM_NAME="SRC" PARM_VALUE="proc&lt;space&gt;preProcessToCombine&lt;space&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;set&lt;space&gt;i&lt;space&gt;0&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;foreach&lt;space&gt;attr&lt;space&gt;&lt;openbracket&gt;FME_GetAttribute&lt;space&gt;&lt;quote&gt;__tmp.attrs&lt;quote&gt;&lt;closebracket&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;FME_SetAttribute&lt;space&gt;&lt;quote&gt;__tmp.attr&lt;opencurly&gt;&lt;dollar&gt;i&lt;closecurly&gt;&lt;quote&gt;&lt;space&gt;&lt;dollar&gt;attr&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;incr&lt;space&gt;i&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;set&lt;space&gt;num&lt;space&gt;&lt;openbracket&gt;FME_GetAttribute&lt;space&gt;&lt;quote&gt;__tmp.max_num&lt;quote&gt;&lt;closebracket&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;&lt;opencurly&gt;!&lt;openbracket&gt;string&lt;space&gt;is&lt;space&gt;integer&lt;space&gt;-strict&lt;space&gt;&lt;dollar&gt;num&lt;closebracket&gt;&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;FME_SetAttribute&lt;space&gt;&lt;quote&gt;__tmp.max_num&lt;quote&gt;&lt;space&gt;0&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;set&lt;space&gt;group&lt;space&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;foreach&lt;space&gt;attr&lt;space&gt;&lt;openbracket&gt;FME_GetAttribute&lt;space&gt;&lt;quote&gt;__tmp.group_by&lt;quote&gt;&lt;closebracket&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;&lt;opencurly&gt;!&lt;openbracket&gt;FME_AttributeExists&lt;space&gt;&lt;dollar&gt;attr&lt;closebracket&gt;&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;lappend&lt;space&gt;group&lt;space&gt;&lt;quote&gt;&lt;backslash&gt;a&lt;quote&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;space&gt;elseif&lt;space&gt;&lt;opencurly&gt;&lt;openbracket&gt;FME_IsAttributeNull&lt;space&gt;&lt;dollar&gt;attr&lt;closebracket&gt;&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;lappend&lt;space&gt;group&lt;space&gt;&lt;quote&gt;&lt;backslash&gt;b&lt;quote&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;space&gt;else&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;lappend&lt;space&gt;group&lt;space&gt;&lt;openbracket&gt;FME_GetAttribute&lt;space&gt;&lt;dollar&gt;attr&lt;closebracket&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;&lt;openbracket&gt;join&lt;space&gt;&lt;dollar&gt;group&lt;space&gt;&lt;opencurly&gt;_&lt;closecurly&gt;&lt;closebracket&gt;&lt;lf&gt;&lt;closecurly&gt;"/>
#! <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="COPYATT" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="SRCFILE" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="VAL_ATTR" PARM_VALUE="__tmp.group"/>
#! <XFORM_PARM PARM_NAME="TCLNUMCOPIES" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="COPIES_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="TclCaller"/>
#! <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="NEW_ATTRIBUTES" PARM_VALUE="__tmp.attr&lt;opencurly&gt;&lt;closecurly&gt;"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#! IDENTIFIER="8"
#! TYPE="Tester"
#! VERSION="2"
#! POSITION="693 -351.503"
#! BOUNDING_RECT="693 -351.503 -1 -1"
#! ORDER="5e+014"
#! PARMS_EDITED="true"
#! ENABLED="true"
#! LAST_PARM_EDIT="15575"
#! >
#! <OUTPUT_FEAT NAME="PASSED"/>
#! <FEAT_COLLAPSED COLLAPSED="0"/>
#! <XFORM_ATTR ATTR_NAME="__tmp.group_by" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.attrs" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.max_num" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.delim" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.drop_empty" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.quot" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.prefix" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.suffix" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.attr{}" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.group" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <OUTPUT_FEAT NAME="FAILED"/>
#! <FEAT_COLLAPSED COLLAPSED="1"/>
#! <XFORM_ATTR ATTR_NAME="__tmp.group_by" IS_USER_CREATED="false" FEAT_INDEX="1" />
#! <XFORM_ATTR ATTR_NAME="__tmp.attrs" IS_USER_CREATED="false" FEAT_INDEX="1" />
#! <XFORM_ATTR ATTR_NAME="__tmp.max_num" IS_USER_CREATED="false" FEAT_INDEX="1" />
#! <XFORM_ATTR ATTR_NAME="__tmp.delim" IS_USER_CREATED="false" FEAT_INDEX="1" />
#! <XFORM_ATTR ATTR_NAME="__tmp.drop_empty" IS_USER_CREATED="false" FEAT_INDEX="1" />
#! <XFORM_ATTR ATTR_NAME="__tmp.quot" IS_USER_CREATED="false" FEAT_INDEX="1" />
#! <XFORM_ATTR ATTR_NAME="__tmp.prefix" IS_USER_CREATED="false" FEAT_INDEX="1" />
#! <XFORM_ATTR ATTR_NAME="__tmp.suffix" IS_USER_CREATED="false" FEAT_INDEX="1" />
#! <XFORM_ATTR ATTR_NAME="__tmp.attr{}" IS_USER_CREATED="false" FEAT_INDEX="1" />
#! <XFORM_ATTR ATTR_NAME="__tmp.group" IS_USER_CREATED="false" FEAT_INDEX="1" />
#! <XFORM_PARM PARM_NAME="BOOL_OP" PARM_VALUE="OR"/>
#! <XFORM_PARM PARM_NAME="TEST_CLAUSE" PARM_VALUE="TEST &lt;at&gt;Value&lt;openparen&gt;__tmp.group_by&lt;closeparen&gt; = &quot;&quot;&#10;TEST $(ORDERED_BY_GROUP) = Yes"/>
#! <XFORM_PARM PARM_NAME="COMPOSITE_TEST" PARM_VALUE="&lt;Unused&gt;"/>
#! <XFORM_PARM PARM_NAME="TEST_LIST" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="TEST_DESCRIPTION" PARM_VALUE="&quot;&quot;"/>
#! <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Tester"/>
#! <XFORM_PARM PARM_NAME="TEST_MODE" PARM_VALUE="Automatic"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#! IDENTIFIER="10"
#! TYPE="Sorter"
#! VERSION="2"
#! POSITION="1220 -564.504"
#! BOUNDING_RECT="1220 -564.504 -1 -1"
#! ORDER="5e+014"
#! PARMS_EDITED="true"
#! ENABLED="true"
#! LAST_PARM_EDIT="15575"
#! >
#! <OUTPUT_FEAT NAME="SORTED"/>
#! <FEAT_COLLAPSED COLLAPSED="0"/>
#! <XFORM_ATTR ATTR_NAME="__tmp.group_by" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.attrs" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.max_num" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.delim" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.drop_empty" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.quot" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.prefix" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.suffix" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.attr{}" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.group" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_PARM PARM_NAME="SORT_PARM" PARM_VALUE="__tmp.group ALPHA ASCENDING"/>
#! <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Sorter"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#! IDENTIFIER="12"
#! TYPE="PythonCaller"
#! VERSION="4"
#! POSITION="1777.51 -417.503"
#! BOUNDING_RECT="1777.51 -417.503 -1 -1"
#! ORDER="5e+014"
#! PARMS_EDITED="true"
#! ENABLED="true"
#! LAST_PARM_EDIT="15575"
#! >
#! <OUTPUT_FEAT NAME="OUTPUT"/>
#! <FEAT_COLLAPSED COLLAPSED="0"/>
#! <XFORM_ATTR ATTR_NAME="__tmp.group_by" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.attrs" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.max_num" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.delim" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.drop_empty" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.quot" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.prefix" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.suffix" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.attr{}" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_ATTR ATTR_NAME="__tmp.group" IS_USER_CREATED="false" FEAT_INDEX="0" />
#! <XFORM_PARM PARM_NAME="ADVANCED_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="LIST_ATTRS" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="HIDE_ATTRIBUTES" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="PYTHONSOURCE" PARM_VALUE="&lt;lf&gt;#&lt;space&gt;2016-04-13&lt;comma&gt;&lt;space&gt;&lt;space&gt;Takashi&lt;space&gt;Iijima&lt;comma&gt;&lt;space&gt;&lt;space&gt;Original&lt;space&gt;Implementation&lt;lf&gt;&lt;lf&gt;import&lt;space&gt;fme&lt;lf&gt;import&lt;space&gt;fmeobjects&lt;comma&gt;&lt;space&gt;locale&lt;lf&gt;&lt;lf&gt;class&lt;space&gt;AttributeCombiner&lt;openparen&gt;object&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;def&lt;space&gt;__init__&lt;openparen&gt;self&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;loc&lt;space&gt;=&lt;space&gt;locale.getdefaultlocale&lt;openparen&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;enc&lt;space&gt;=&lt;space&gt;loc&lt;openbracket&gt;1&lt;closebracket&gt;&lt;space&gt;if&lt;space&gt;loc&lt;space&gt;else&lt;space&gt;&lt;apos&gt;utf_8&lt;apos&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.toStr&lt;space&gt;=&lt;space&gt;lambda&lt;space&gt;s:&lt;space&gt;s.encode&lt;openparen&gt;enc&lt;closeparen&gt;&lt;space&gt;if&lt;space&gt;isinstance&lt;openparen&gt;s&lt;comma&gt;&lt;space&gt;unicode&lt;closeparen&gt;&lt;space&gt;else&lt;space&gt;str&lt;openparen&gt;s&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.reset&lt;openparen&gt;None&lt;comma&gt;&lt;space&gt;None&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;def&lt;space&gt;reset&lt;openparen&gt;self&lt;comma&gt;&lt;space&gt;group&lt;comma&gt;&lt;space&gt;feature&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.group&lt;space&gt;=&lt;space&gt;group&lt;space&gt;#&lt;space&gt;group&lt;space&gt;ID&lt;space&gt;value&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.feature&lt;space&gt;=&lt;space&gt;feature&lt;space&gt;#&lt;space&gt;first&lt;space&gt;feature&lt;space&gt;for&lt;space&gt;each&lt;space&gt;group&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.data&lt;space&gt;=&lt;space&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;space&gt;#&lt;space&gt;key:&lt;space&gt;attribute&lt;space&gt;name&lt;comma&gt;&lt;space&gt;value:&lt;space&gt;list&lt;space&gt;of&lt;space&gt;attribute&lt;space&gt;values&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.count&lt;space&gt;=&lt;space&gt;0&lt;space&gt;#&lt;space&gt;counter&lt;space&gt;for&lt;space&gt;number&lt;space&gt;of&lt;space&gt;features&lt;space&gt;to&lt;space&gt;combine&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;def&lt;space&gt;input&lt;openparen&gt;self&lt;comma&gt;&lt;space&gt;feature&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;group&lt;space&gt;=&lt;space&gt;feature.getAttribute&lt;openparen&gt;&lt;apos&gt;__tmp.group&lt;apos&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;num&lt;space&gt;=&lt;space&gt;int&lt;openparen&gt;feature.getAttribute&lt;openparen&gt;&lt;apos&gt;__tmp.max_num&lt;apos&gt;&lt;closeparen&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;group&lt;space&gt;!=&lt;space&gt;self.group&lt;space&gt;or&lt;space&gt;&lt;openparen&gt;0&lt;space&gt;&lt;lt&gt;&lt;space&gt;num&lt;space&gt;and&lt;space&gt;num&lt;space&gt;&lt;lt&gt;=&lt;space&gt;self.count&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.output&lt;openparen&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.reset&lt;openparen&gt;group&lt;comma&gt;&lt;space&gt;feature&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;for&lt;space&gt;attr&lt;space&gt;in&lt;space&gt;feature.getAttribute&lt;openparen&gt;&lt;apos&gt;__tmp.attr&lt;opencurly&gt;&lt;closecurly&gt;&lt;apos&gt;&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;attr&lt;space&gt;=&lt;space&gt;self.toStr&lt;openparen&gt;attr&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;isNull&lt;comma&gt;&lt;space&gt;isMissing&lt;comma&gt;&lt;space&gt;type&lt;space&gt;=&lt;space&gt;feature.getAttributeNullMissingAndType&lt;openparen&gt;attr&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;not&lt;space&gt;isNull&lt;space&gt;and&lt;space&gt;not&lt;space&gt;isMissing:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.data.setdefault&lt;openparen&gt;attr&lt;comma&gt;&lt;space&gt;&lt;openbracket&gt;&lt;closebracket&gt;&lt;closeparen&gt;.append&lt;openparen&gt;&lt;apos&gt;%s&lt;apos&gt;&lt;space&gt;%&lt;space&gt;feature.getAttribute&lt;openparen&gt;attr&lt;closeparen&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.count&lt;space&gt;+=&lt;space&gt;1&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;def&lt;space&gt;close&lt;openparen&gt;self&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.output&lt;openparen&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;def&lt;space&gt;output&lt;openparen&gt;self&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;self.feature:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;fmt&lt;space&gt;=&lt;space&gt;self.getFormat&lt;openparen&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;delim&lt;space&gt;=&lt;space&gt;self.feature.getAttribute&lt;openparen&gt;&lt;apos&gt;__tmp.delim&lt;apos&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;self.feature.getAttribute&lt;openparen&gt;&lt;apos&gt;__tmp.drop_empty&lt;apos&gt;&lt;closeparen&gt;&lt;space&gt;==&lt;space&gt;&lt;apos&gt;Yes&lt;apos&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;for&lt;space&gt;attr&lt;comma&gt;&lt;space&gt;values&lt;space&gt;in&lt;space&gt;self.data.iteritems&lt;openparen&gt;&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.feature.setAttribute&lt;openparen&gt;attr&lt;comma&gt;&lt;space&gt;delim.join&lt;openparen&gt;&lt;openbracket&gt;fmt&lt;space&gt;%&lt;space&gt;v&lt;space&gt;for&lt;space&gt;v&lt;space&gt;in&lt;space&gt;values&lt;space&gt;if&lt;space&gt;v&lt;space&gt;!=&lt;space&gt;&lt;apos&gt;&lt;apos&gt;&lt;closebracket&gt;&lt;closeparen&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;else:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;for&lt;space&gt;attr&lt;comma&gt;&lt;space&gt;values&lt;space&gt;in&lt;space&gt;self.data.iteritems&lt;openparen&gt;&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.feature.setAttribute&lt;openparen&gt;attr&lt;comma&gt;&lt;space&gt;delim.join&lt;openparen&gt;&lt;openbracket&gt;fmt&lt;space&gt;%&lt;space&gt;v&lt;space&gt;for&lt;space&gt;v&lt;space&gt;in&lt;space&gt;values&lt;closebracket&gt;&lt;closeparen&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.pyoutput&lt;openparen&gt;self.feature&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;def&lt;space&gt;getFormat&lt;openparen&gt;self&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;formats&lt;space&gt;=&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;apos&gt;Single&lt;apos&gt;:&lt;space&gt;&lt;apos&gt;&lt;backslash&gt;&lt;apos&gt;%s%%s%s&lt;backslash&gt;&lt;apos&gt;&lt;apos&gt;&lt;space&gt;&lt;comma&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;apos&gt;Double&lt;apos&gt;:&lt;space&gt;&lt;apos&gt;&lt;quote&gt;%s%%s%s&lt;quote&gt;&lt;apos&gt;&lt;space&gt;&lt;comma&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;apos&gt;Round&lt;apos&gt;:&lt;space&gt;&lt;apos&gt;&lt;openparen&gt;%s%%s%s&lt;closeparen&gt;&lt;apos&gt;&lt;comma&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;apos&gt;Curly&lt;apos&gt;:&lt;space&gt;&lt;apos&gt;&lt;opencurly&gt;%s%%s%s&lt;closecurly&gt;&lt;apos&gt;&lt;comma&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;apos&gt;Square&lt;apos&gt;:&lt;space&gt;&lt;apos&gt;&lt;openbracket&gt;%s%%s%s&lt;closebracket&gt;&lt;apos&gt;&lt;comma&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;apos&gt;Inequality&lt;apos&gt;:&lt;space&gt;&lt;apos&gt;&lt;lt&gt;%s%%s%s&lt;gt&gt;&lt;apos&gt;&lt;comma&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;apos&gt;None&lt;apos&gt;:&lt;space&gt;&lt;apos&gt;%s%%s%s&lt;apos&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;option&lt;space&gt;=&lt;space&gt;self.feature.getAttribute&lt;openparen&gt;&lt;apos&gt;__tmp.quot&lt;apos&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;prefix=&lt;space&gt;self.feature.getAttribute&lt;openparen&gt;&lt;apos&gt;__tmp.prefix&lt;apos&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;suffix&lt;space&gt;=&lt;space&gt;self.feature.getAttribute&lt;openparen&gt;&lt;apos&gt;__tmp.suffix&lt;apos&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;formats&lt;openbracket&gt;option&lt;closebracket&gt;&lt;space&gt;%&lt;space&gt;&lt;openparen&gt;prefix&lt;comma&gt;&lt;space&gt;suffix&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;"/>
#! <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="PythonCaller"/>
#! <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="PYTHONSYMBOL" PARM_VALUE="AttributeCombiner"/>
#! <XFORM_PARM PARM_NAME="NEW_ATTRIBUTES" PARM_VALUE=""/>
#! </TRANSFORMER>
#! <TRANSFORMER
#! IDENTIFIER="16"
#! TYPE="AttributeRemover"
#! VERSION="1"
#! POSITION="2308.52 -417.503"
#! BOUNDING_RECT="2308.52 -417.503 -1 -1"
#! ORDER="5e+014"
#! PARMS_EDITED="true"
#! ENABLED="true"
#! LAST_PARM_EDIT="15575"
#! >
#! <OUTPUT_FEAT NAME="OUTPUT"/>
#! <FEAT_COLLAPSED COLLAPSED="0"/>
#! <XFORM_PARM PARM_NAME="LIST_ATTRS" PARM_VALUE="__tmp.attr&lt;opencurly&gt;&lt;closecurly&gt;"/>
#! <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="AttributeRemover"/>
#! <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="REMOVE_ATTRS" PARM_VALUE="__tmp.attrs,__tmp.delim,__tmp.drop_empty,__tmp.group,__tmp.group_by,__tmp.max_num,__tmp.prefix,__tmp.quot,__tmp.suffix"/>
#! </TRANSFORMER>
#! </TRANSFORMERS>
#! <SUBDOCUMENT_IOS>
#! <SUBDOCUMENT_IO
#! IDENTIFIER="1"
#! NAME="Input"
#! POSITION="115 -9.9991"
#! BOUNDING_RECT="115 -9.9991 -1 -1"
#! COLLAPSED="true"
#! PUBLISHED="true"
#! IS_SOURCE="true"
#! ATTR_MODE="0"
#! >
#! </SUBDOCUMENT_IO>
#! <SUBDOCUMENT_IO
#! IDENTIFIER="2"
#! NAME="Output"
#! POSITION="2836.76 -436.003"
#! BOUNDING_RECT="2836.76 -436.003 -1 -1"
#! COLLAPSED="true"
#! IS_SOURCE="false"
#! ATTR_MODE="0"
#! >
#! </SUBDOCUMENT_IO>
#! </SUBDOCUMENT_IOS>
#! <FEAT_LINKS>
#! <FEAT_LINK
#! IDENTIFIER="4"
#! SOURCE_NODE="1"
#! TARGET_NODE="3"
#! SOURCE_PORT_DESC="0"
#! TARGET_PORT_DESC="fi 0"
#! ENABLED="true"
#! EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#! IDENTIFIER="7"
#! SOURCE_NODE="3"
#! TARGET_NODE="6"
#! SOURCE_PORT_DESC="fo 0"
#! TARGET_PORT_DESC="fi 0"
#! ENABLED="true"
#! EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#! IDENTIFIER="9"
#! SOURCE_NODE="6"
#! TARGET_NODE="8"
#! SOURCE_PORT_DESC="fo 0"
#! TARGET_PORT_DESC="fi 0"
#! ENABLED="true"
#! EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#! IDENTIFIER="11"
#! SOURCE_NODE="8"
#! TARGET_NODE="10"
#! SOURCE_PORT_DESC="fo 1"
#! TARGET_PORT_DESC="fi 0"
#! ENABLED="true"
#! EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#! IDENTIFIER="14"
#! SOURCE_NODE="10"
#! TARGET_NODE="12"
#! SOURCE_PORT_DESC="fo 0"
#! TARGET_PORT_DESC="fi 0"
#! ENABLED="true"
#! EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#! IDENTIFIER="17"
#! SOURCE_NODE="12"
#! TARGET_NODE="16"
#! SOURCE_PORT_DESC="fo 0"
#! TARGET_PORT_DESC="fi 0"
#! ENABLED="true"
#! EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#! IDENTIFIER="18"
#! SOURCE_NODE="16"
#! TARGET_NODE="2"
#! SOURCE_PORT_DESC="fo 0"
#! TARGET_PORT_DESC="0"
#! ENABLED="true"
#! EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#! IDENTIFIER="13"
#! SOURCE_NODE="8"
#! TARGET_NODE="12"
#! SOURCE_PORT_DESC="fo 0"
#! TARGET_PORT_DESC="fi 0"
#! ENABLED="true"
#! EXTRA_POINTS=""
#! />
#! </FEAT_LINKS>
#! <BREAKPOINTS>
#! </BREAKPOINTS>
#! <ATTR_LINKS>
#! </ATTR_LINKS>
#! <SUBDOCUMENTS>
#! </SUBDOCUMENTS>
#! <LOOKUP_TABLES>
#! </LOOKUP_TABLES>
#! </TRANSFORMER>
#! 
DEFAULT_MACRO $(AttributeCombiner_WORKSPACE_NAME)_GROUP_BY 
DEFAULT_MACRO $(AttributeCombiner_WORKSPACE_NAME)_ORDERED_BY_GROUP No
DEFAULT_MACRO $(AttributeCombiner_WORKSPACE_NAME)_ATTRS 
DEFAULT_MACRO $(AttributeCombiner_WORKSPACE_NAME)_MAX_NUM 
DEFAULT_MACRO $(AttributeCombiner_WORKSPACE_NAME)_DROP_EMPTY No
DEFAULT_MACRO $(AttributeCombiner_WORKSPACE_NAME)_DELIM <comma>
DEFAULT_MACRO $(AttributeCombiner_WORKSPACE_NAME)_QUOT None
DEFAULT_MACRO $(AttributeCombiner_WORKSPACE_NAME)_PREFIX 
DEFAULT_MACRO $(AttributeCombiner_WORKSPACE_NAME)_SUFFIX 
#! START_HEADER
#! END_HEADER

LOG_FILTER_MASK -1
DEFAULT_MACRO WB_CURRENT_CONTEXT
DEFAULT_MACRO AttributeCombiner_WORKSPACE_NAME ""
INCLUDE [puts {MACRO WB_OLD_CONTEXT_$(AttributeCombiner_WORKSPACE_NAME) $(WB_CURRENT_CONTEXT)};          puts {MACRO WB_CURRENT_CONTEXT $(AttributeCombiner_WORKSPACE_NAME)}]
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(AttributeCombiner_WORKSPACE_NAME)_Input1460794842 Input Splitter"   INPUT FEATURE_TYPE "$(AttributeCombiner_WORKSPACE_NAME)_Input"   OUTPUT FEATURE_TYPE "$(AttributeCombiner_WORKSPACE_NAME)_Input"
# -------------------------------------------------------------------------

Tcl2 proc $(AttributeCombiner_WORKSPACE_NAME)_ParameterFetcher_doFetch {} {    foreach {name val} {"__tmp.group_by {$($(AttributeCombiner_WORKSPACE_NAME)_GROUP_BY$encode)} __tmp.attrs {$($(AttributeCombiner_WORKSPACE_NAME)_ATTRS$encode)} __tmp.max_num {$($(AttributeCombiner_WORKSPACE_NAME)_MAX_NUM$encode)} __tmp.delim {$($(AttributeCombiner_WORKSPACE_NAME)_DELIM)} __tmp.drop_empty {$($(AttributeCombiner_WORKSPACE_NAME)_DROP_EMPTY$encode)} __tmp.quot {$($(AttributeCombiner_WORKSPACE_NAME)_QUOT)} __tmp.prefix {$($(AttributeCombiner_WORKSPACE_NAME)_PREFIX)} __tmp.suffix {$($(AttributeCombiner_WORKSPACE_NAME)_SUFFIX)}"} {         if { [string match {*<at>*} $val] == 1 } {             set val [FME_Execute EvaluateExpression {STRING} $val {$(AttributeCombiner_WORKSPACE_NAME)_ParameterFetcher}];         } elseif {[string match {*FME_CONDITIONAL*} $val] == 1} {             set val [FME_Execute EvaluateExpression {STRING} $val {$(AttributeCombiner_WORKSPACE_NAME)_ParameterFetcher}];         } else {             set val [FME_DecodeTextOrAttr $val];         };       FME_SetAttribute [FME_DecodeText $name] $val    } }
FACTORY_DEF * TeeFactory    FACTORY_NAME $(AttributeCombiner_WORKSPACE_NAME)_ParameterFetcher    INPUT  FEATURE_TYPE "$(AttributeCombiner_WORKSPACE_NAME)_Input"    OUTPUT FEATURE_TYPE "$(AttributeCombiner_WORKSPACE_NAME)_ParameterFetcher_OUTPUT"         @Tcl2($(AttributeCombiner_WORKSPACE_NAME)_ParameterFetcher_doFetch)

# -------------------------------------------------------------------------


Tcl2 FME_Decode proc<space>preProcessToCombine<space><opencurly><closecurly><space><opencurly><lf><space><space><space><space>set<space>i<space>0<lf><space><space><space><space>foreach<space>attr<space><openbracket>FME_GetAttribute<space><quote>__tmp.attrs<quote><closebracket><space><opencurly><lf><space><space><space><space><space><space><space><space>FME_SetAttribute<space><quote>__tmp.attr<opencurly><dollar>i<closecurly><quote><space><dollar>attr<lf><space><space><space><space><space><space><space><space>incr<space>i<lf><space><space><space><space><closecurly><lf><space><space><space><space>set<space>num<space><openbracket>FME_GetAttribute<space><quote>__tmp.max_num<quote><closebracket><lf><space><space><space><space>if<space><opencurly>!<openbracket>string<space>is<space>integer<space>-strict<space><dollar>num<closebracket><closecurly><space><opencurly><lf><space><space><space><space><space><space><space><space>FME_SetAttribute<space><quote>__tmp.max_num<quote><space>0<lf><space><space><space><space><closecurly><lf><space><space><space><space>set<space>group<space><opencurly><closecurly><lf><space><space><space><space>foreach<space>attr<space><openbracket>FME_GetAttribute<space><quote>__tmp.group_by<quote><closebracket><space><opencurly><lf><space><space><space><space><space><space><space><space>if<space><opencurly>!<openbracket>FME_AttributeExists<space><dollar>attr<closebracket><closecurly><space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space>lappend<space>group<space><quote><backslash>a<quote><lf><space><space><space><space><space><space><space><space><closecurly><space>elseif<space><opencurly><openbracket>FME_IsAttributeNull<space><dollar>attr<closebracket><closecurly><space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space>lappend<space>group<space><quote><backslash>b<quote><lf><space><space><space><space><space><space><space><space><closecurly><space>else<space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space>lappend<space>group<space><openbracket>FME_GetAttribute<space><dollar>attr<closebracket><lf><space><space><space><space><space><space><space><space><closecurly><lf><space><space><space><space><closecurly><lf><space><space><space><space>return<space><openbracket>join<space><dollar>group<space><opencurly>_<closecurly><closebracket><lf><closecurly>
MACRO COPIER @Tcl2("")
INCLUDE [ if {[string length {}] == 0} {             puts {MACRO COPIER 1} }
FACTORY_DEF * TeeFactory    FACTORY_NAME $(AttributeCombiner_WORKSPACE_NAME)_TclCaller    INPUT  FEATURE_TYPE "$(AttributeCombiner_WORKSPACE_NAME)_ParameterFetcher_OUTPUT"    NUMBER_OF_COPIES $(COPIER)    OUTPUT FEATURE_TYPE "$(AttributeCombiner_WORKSPACE_NAME)_TclCaller_OUTPUT"         "__tmp.group" @Tcl2("preProcessToCombine")

# -------------------------------------------------------------------------

FACTORY_DEF * TestFactory    FACTORY_NAME $(AttributeCombiner_WORKSPACE_NAME)_Tester    INPUT  FEATURE_TYPE "$(AttributeCombiner_WORKSPACE_NAME)_TclCaller_OUTPUT"    TEST @EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>__tmp.group_by<closeparen>,$(AttributeCombiner_WORKSPACE_NAME)_Tester) = "" ENCODED TEST @EvaluateExpression(FDIV,STRING_ENCODED,$($(AttributeCombiner_WORKSPACE_NAME)_ORDERED_BY_GROUP$encode),$(AttributeCombiner_WORKSPACE_NAME)_Tester) = Yes ENCODED    BOOLEAN_OPERATOR OR    OUTPUT PASSED FEATURE_TYPE "$(AttributeCombiner_WORKSPACE_NAME)_Tester_PASSED"    OUTPUT FAILED FEATURE_TYPE "$(AttributeCombiner_WORKSPACE_NAME)_Tester_FAILED"
# -------------------------------------------------------------------------

FACTORY_DEF * SortFactory    FACTORY_NAME $(AttributeCombiner_WORKSPACE_NAME)_Sorter    INPUT  FEATURE_TYPE "$(AttributeCombiner_WORKSPACE_NAME)_Tester_FAILED"    SORT_BY __tmp.group ALPHA ASCENDING    OUTPUT SORTED FEATURE_TYPE "$(AttributeCombiner_WORKSPACE_NAME)_Sorter_SORTED"

# -------------------------------------------------------------------------


FME_PYTHON_PATH "$(FME_MF_DIR)"

FACTORY_DEF * PythonFactory    FACTORY_NAME $(AttributeCombiner_WORKSPACE_NAME)_PythonCaller    INPUT  FEATURE_TYPE "$(AttributeCombiner_WORKSPACE_NAME)_Sorter_SORTED"    INPUT  FEATURE_TYPE "$(AttributeCombiner_WORKSPACE_NAME)_Tester_PASSED"    SYMBOL_NAME AttributeCombiner    PYTHON_NAMESPACE FMEOBJECTS    SOURCE_CODE <lf>#<space>2016-04-13<comma><space><space>Takashi<space>Iijima<comma><space><space>Original<space>Implementation<lf><lf>import<space>fme<lf>import<space>fmeobjects<comma><space>locale<lf><lf>class<space>AttributeCombiner<openparen>object<closeparen>:<lf><space><space><space><space>def<space>__init__<openparen>self<closeparen>:<lf><space><space><space><space><space><space><space><space>loc<space>=<space>locale.getdefaultlocale<openparen><closeparen><lf><space><space><space><space><space><space><space><space>enc<space>=<space>loc<openbracket>1<closebracket><space>if<space>loc<space>else<space><apos>utf_8<apos><lf><space><space><space><space><space><space><space><space>self.toStr<space>=<space>lambda<space>s:<space>s.encode<openparen>enc<closeparen><space>if<space>isinstance<openparen>s<comma><space>unicode<closeparen><space>else<space>str<openparen>s<closeparen><lf><space><space><space><space><space><space><space><space>self.reset<openparen>None<comma><space>None<closeparen><lf><space><space><space><space><space><space><space><space><lf><space><space><space><space>def<space>reset<openparen>self<comma><space>group<comma><space>feature<closeparen>:<lf><space><space><space><space><space><space><space><space>self.group<space>=<space>group<space>#<space>group<space>ID<space>value<lf><space><space><space><space><space><space><space><space>self.feature<space>=<space>feature<space>#<space>first<space>feature<space>for<space>each<space>group<lf><space><space><space><space><space><space><space><space>self.data<space>=<space><opencurly><closecurly><space>#<space>key:<space>attribute<space>name<comma><space>value:<space>list<space>of<space>attribute<space>values<lf><space><space><space><space><space><space><space><space>self.count<space>=<space>0<space>#<space>counter<space>for<space>number<space>of<space>features<space>to<space>combine<lf><space><space><space><space><space><space><space><space><lf><space><space><space><space>def<space>input<openparen>self<comma><space>feature<closeparen>:<lf><space><space><space><space><space><space><space><space>group<space>=<space>feature.getAttribute<openparen><apos>__tmp.group<apos><closeparen><lf><space><space><space><space><space><space><space><space>num<space>=<space>int<openparen>feature.getAttribute<openparen><apos>__tmp.max_num<apos><closeparen><closeparen><lf><space><space><space><space><space><space><space><space>if<space>group<space>!=<space>self.group<space>or<space><openparen>0<space><lt><space>num<space>and<space>num<space><lt>=<space>self.count<closeparen>:<lf><space><space><space><space><space><space><space><space><space><space><space><space>self.output<openparen><closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space>self.reset<openparen>group<comma><space>feature<closeparen><lf><space><space><space><space><space><space><space><space>for<space>attr<space>in<space>feature.getAttribute<openparen><apos>__tmp.attr<opencurly><closecurly><apos><closeparen>:<lf><space><space><space><space><space><space><space><space><space><space><space><space>attr<space>=<space>self.toStr<openparen>attr<closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space>isNull<comma><space>isMissing<comma><space>type<space>=<space>feature.getAttributeNullMissingAndType<openparen>attr<closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space>if<space>not<space>isNull<space>and<space>not<space>isMissing:<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>self.data.setdefault<openparen>attr<comma><space><openbracket><closebracket><closeparen>.append<openparen><apos>%s<apos><space>%<space>feature.getAttribute<openparen>attr<closeparen><closeparen><lf><space><space><space><space><space><space><space><space>self.count<space>+=<space>1<lf><space><space><space><space><space><space><space><space><space><space><space><lf><space><space><space><space>def<space>close<openparen>self<closeparen>:<lf><space><space><space><space><space><space><space><space>self.output<openparen><closeparen><lf><space><space><space><space><space><space><space><space><lf><space><space><space><space>def<space>output<openparen>self<closeparen>:<lf><space><space><space><space><space><space><space><space>if<space>self.feature:<lf><space><space><space><space><space><space><space><space><space><space><space><space>fmt<space>=<space>self.getFormat<openparen><closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space>delim<space>=<space>self.feature.getAttribute<openparen><apos>__tmp.delim<apos><closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space>if<space>self.feature.getAttribute<openparen><apos>__tmp.drop_empty<apos><closeparen><space>==<space><apos>Yes<apos>:<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>for<space>attr<comma><space>values<space>in<space>self.data.iteritems<openparen><closeparen>:<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>self.feature.setAttribute<openparen>attr<comma><space>delim.join<openparen><openbracket>fmt<space>%<space>v<space>for<space>v<space>in<space>values<space>if<space>v<space>!=<space><apos><apos><closebracket><closeparen><closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space>else:<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>for<space>attr<comma><space>values<space>in<space>self.data.iteritems<openparen><closeparen>:<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>self.feature.setAttribute<openparen>attr<comma><space>delim.join<openparen><openbracket>fmt<space>%<space>v<space>for<space>v<space>in<space>values<closebracket><closeparen><closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space>self.pyoutput<openparen>self.feature<closeparen><lf><space><space><space><space><space><space><space><space><lf><space><space><space><space>def<space>getFormat<openparen>self<closeparen>:<lf><space><space><space><space><space><space><space><space>formats<space>=<space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space><apos>Single<apos>:<space><apos><backslash><apos>%s%%s%s<backslash><apos><apos><space><comma><lf><space><space><space><space><space><space><space><space><space><space><space><space><apos>Double<apos>:<space><apos><quote>%s%%s%s<quote><apos><space><comma><lf><space><space><space><space><space><space><space><space><space><space><space><space><apos>Round<apos>:<space><apos><openparen>%s%%s%s<closeparen><apos><comma><lf><space><space><space><space><space><space><space><space><space><space><space><space><apos>Curly<apos>:<space><apos><opencurly>%s%%s%s<closecurly><apos><comma><lf><space><space><space><space><space><space><space><space><space><space><space><space><apos>Square<apos>:<space><apos><openbracket>%s%%s%s<closebracket><apos><comma><lf><space><space><space><space><space><space><space><space><space><space><space><space><apos>Inequality<apos>:<space><apos><lt>%s%%s%s<gt><apos><comma><lf><space><space><space><space><space><space><space><space><space><space><space><space><apos>None<apos>:<space><apos>%s%%s%s<apos><lf><space><space><space><space><space><space><space><space><closecurly><lf><space><space><space><space><space><space><space><space>option<space>=<space>self.feature.getAttribute<openparen><apos>__tmp.quot<apos><closeparen><lf><space><space><space><space><space><space><space><space>prefix=<space>self.feature.getAttribute<openparen><apos>__tmp.prefix<apos><closeparen><lf><space><space><space><space><space><space><space><space>suffix<space>=<space>self.feature.getAttribute<openparen><apos>__tmp.suffix<apos><closeparen><lf><space><space><space><space><space><space><space><space>return<space>formats<openbracket>option<closebracket><space>%<space><openparen>prefix<comma><space>suffix<closeparen><lf><space><space><space><space><space><space><space><space>    OUTPUT PYOUTPUT FEATURE_TYPE "$(AttributeCombiner_WORKSPACE_NAME)_PythonCaller_OUTPUT"

# -------------------------------------------------------------------------

INCLUDE [    set macroLine "MACRO $(AttributeCombiner_WORKSPACE_NAME)_AttributeRemover_LIST_EXP ";    foreach attr [split "__tmp.attr<opencurly><closecurly>"] {       set attr [FME_DecodeText $attr];       set attr [regsub "{}$" $attr "{}.*"];       set attr [regsub -all "{}" $attr "\\{\[0-9\]+\\}"];       append macroLine ",^$attr$";    };    puts $macroLine; ]
FACTORY_DEF * TeeFactory    FACTORY_NAME $(AttributeCombiner_WORKSPACE_NAME)_AttributeRemover    INPUT  FEATURE_TYPE "$(AttributeCombiner_WORKSPACE_NAME)_PythonCaller_OUTPUT"    OUTPUT FEATURE_TYPE "$(AttributeCombiner_WORKSPACE_NAME)_AttributeRemover_OUTPUT"        @RemoveAttributes(fme_encoded,__tmp.attrs,__tmp.delim,__tmp.drop_empty,__tmp.group,__tmp.group_by,__tmp.max_num,__tmp.prefix,__tmp.quot,__tmp.suffix)        @RemoveAttributes(fme_pcre_match"$($(AttributeCombiner_WORKSPACE_NAME)_AttributeRemover_LIST_EXP)")

FACTORY_DEF * TeeFactory   FACTORY_NAME "$(AttributeCombiner_WORKSPACE_NAME)_Output1460794842 Output Collector"   INPUT FEATURE_TYPE "$(AttributeCombiner_WORKSPACE_NAME)_AttributeRemover_OUTPUT"   OUTPUT FEATURE_TYPE "$(AttributeCombiner_WORKSPACE_NAME)_Output"
INCLUDE [puts {MACRO WB_CURRENT_CONTEXT $(WB_OLD_CONTEXT_$(AttributeCombiner_WORKSPACE_NAME))}]
